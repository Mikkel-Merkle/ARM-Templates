{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "releaseNumber": {
            "type": "string",
            "defaultValue": ""
        },
        "deploymentId": {
            "type": "string",
            "defaultValue": "[resourceGroup().name]"
        },
        "environment": {
            "type": "string",
            "allowedValues": ["dev", "tst", "prd"],
            "defaultValue": "dev"
        },
        "location": {
            "type": "string",
            "defaultValue": "[resourceGroup().location]"
        },
        "dbSKU": {
            "type": "string",
            "defaultValue": "S0",
            "allowedValues": [
                "Basic",
                "S0",
                "S1",
                "S2",
                "S3",
                "S4",
                "S5",
                "P1",
                "P2"
            ],
            "metadata": {
                "description": "DB Account type"
            }
        },
        // "searchSKU": {
        //     "type": "string",
        //     "defaultValue": "free",
        //     "allowedValues": [
        //         "free",
        //         "basic",
        //         "standard",
        //         "standard2",
        //         "standard3",
        //         "storage_optimized_l1",
        //         "storage_optimized_l2"
        //     ],
        //     "metadata": {
        //         "description": "The pricing tier of the search service you want to create (for example, basic or standard)."
        //     }
        // },
        "storageSKU": {
            "type": "string",
            "defaultValue": "Standard_LRS",
            "allowedValues": [
                "Standard_LRS",
                "Standard_GRS",
                "Standard_RAGRS",
                "Standard_ZRS",
                "Premium_LRS",
                "Premium_ZRS",
                "Standard_GZRS",
                "Standard_RAGZRS"
            ],
            "metadata": {
                "description": "Storage Account type"
            }
        },
        "webAppSKU": {
            "type": "string",
            "defaultValue": "F1",
            "allowedValues": [
                "F1",
                "D1",
                "B1",
                "B2",
                "B3",
                "S1",
                "S2",
                "S3",
                "P1",
                "P2",
                "P3",
                "P4"
            ],
            "metadata": {
                "description": "Describes plan's pricing tier for the frontend"
            }
        },
        "webAppBOSKU": {
            "type": "string",
            "defaultValue": "F1",
            "allowedValues": [
                "F1",
                "D1",
                "B1",
                "B2",
                "B3",
                "S1",
                "S2",
                "S3",
                "P1",
                "P2",
                "P3",
                "P4"
            ],
            "metadata": {
                "description": "Describes plan's pricing tier for backend"
            }
        },
        // "webAppSKUCapacity": {
        //     "type": "int",
        //     "defaultValue": 1,
        //     "minValue": 1,
        //     "maxValue": 3,
        //     "metadata": {
        //         "description": "Describes plan's instance count of frontend"
        //     }
        // },
        // "webAppBOSKUCapacity": {
        //     "type": "int",
        //     "defaultValue": 1,
        //     "minValue": 1,
        //     "maxValue": 3,
        //     "metadata": {
        //         "description": "Describes plan's instance count of backend"
        //     }
        // },
        "dbAdministratorLogin": {
            "type": "string",
            "defaultValue": "veryS3cure",
            "metadata": {
                "description": "SQL Azure DB administrator user login"
            }
        },
        "dbAdministratorLoginPassword": {
            "type": "securestring",
            "defaultValue": "Y0ucanthackthis!Hammertime.",
            "metadata": {
                "description": "Database admin user password"
            }
        },
        "connectionStringName": {
            "type": "string",
            "defaultValue": "umbracoDbDSN",
            "metadata": {
                "description": "Name of connection string"
            }
        },
        "shareHostPlan": {
            "type": "bool",
            "defaultValue": false,
            "metadata": {
                "description": "Frontend and backend share the same hosting plan (the frontend plan)"
            }
        },
        "umbracoVersion": {
            "type": "string",
            "defaultValue": "11.2",
            "metadata": {
                "description": "Umbraco version"
            }
        }
        // ,
        // "templateLinkBase": {
        //     "type": "string",
        //     "defaultValue": "[uri('https://raw.githubusercontent.com/Mikkel-Merkle/ARM-Templates', '.')]"
        // }
    },
    "functions": [
    {
        "namespace": "Merkle",
        "members": {
            "namingConvention": {
                "parameters": [
                    {
                        "name": "deploymentId",
                        "type": "string"
                    },
                    {
                        "name": "environment",
                        "type": "string"
                    }
                ],
                "output": {
                    "type": "string",
                    "value": "[concat(substring(parameters('deploymentId'), 2), '-', parameters('environment'))]"
                }
            }
        }
    }
    ],
    "variables": {
        "resourcesApiVersion": "2022-09-01",
        "deploymentId": "[Merkle.namingConvention(parameters('deploymentId'), parameters('environment'))]",
        "postFixName": "[concat('umbraco', if(empty(parameters('releaseNumber')), '', concat('-', parameters('releaseNumber'))))]",
        // "searchServiceEnvName": "search",
        "storageDeploymentName": "storageAccount",
        "dbServiceDeploymentName": "cms-database",
        "boHostingPlanDeploymentName": "boHostingPlan",
        "webHostingPlanDeploymentName": "webHostingPlan",
        "boWebAppDeploymentName": "cms-web-app",
        "feWebAppDeploymentName": "next-web-app",
        "appInsightDeploymentName": "appInsight",

        /// Naming conventions
        // Storage account
        "storageAccountName": "[concat('st', replace(variables('deploymentId'), '-', ''))]",
        "mediaContainerName": "media",

        // Databases
        "dbServerName": "[concat('sql-', variables('deploymentId'))]",
        "dbName": "[concat('sqldb-umbraco', variables('deploymentId'))]",

        // Hostin plan
        // "hostingPlanName": "[concat('plan-', variables('deploymentId'))]",
        "hostingPlanBOName": "[concat('plan-', variables('deploymentId'), '-', variables('postFixName'))]",

        // Web App
        "webAppFEName": "[concat('app-', variables('deploymentId'))]",
        "webAppBOName": "[concat('app-', variables('deploymentId'), variables('postFixName'))]",

        // Application Insights
        "appInsightName": "[concat('appi-', variables('deploymentId'))]",

        // Azure Search
        "searchServiceName": "[concat('srch-', variables('deploymentId'))]"
        // "searchServiceEnvName": "[concat(variables('searchServiceName'),'-',parameters('environment'))]",

        // "connectionString": "[concat('Server=tcp:', variables('dbServerName'), '.database.windows.net,1433;Initial Catalog=', variables('dbName'), ';Persist Security Info=False;User ID=', parameters('dbAdministratorLogin'), ';Password=', parameters('dbAdministratorLoginPassword'), ';MultipleActiveResultSets=False;Encrypt=True;TrustServerCertificate=False;Connection Timeout=30;')]",
        // "resourceTags": {
        //     "Environment": "[parameters('environment')]",
        //     "Project": "[parameters('applicationName')]"
        // }
    },
    "resources": [
        {
            "apiVersion": "[variables('resourcesApiVersion')]",
            "name": "[variables('storageDeploymentName')]",
            "type": "Microsoft.Resources/deployments",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "relativePath": "nested/storageAccount.json"
                },
                "parameters": {
                    "deploymentId": {
                        "value": "[variables('deploymentId')]"
                    },
                    "location": {
                        "value": "[parameters('location')]"
                    },
                    "sku": {
                        "value": "[parameters('storageSKU')]"
                    },
                    "storageAccountName": {
                        "value": "[variables('storageAccountName')]"
                    },
                    "mediaContainerName": {
                        "value": "[variables('mediaContainerName')]"
                    }
                }
            }
        },
        {
            "apiVersion": "[variables('resourcesApiVersion')]",
            "name": "[variables('dbServiceDeploymentName')]",
            "type": "Microsoft.Resources/deployments",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "relativePath": "nested/database.json"
                },
                "parameters": {
                    "dbName": {
                        "value": "[variables('postFixName')]"
                    },
                    "deploymentId": {
                        "value": "[variables('deploymentId')]"
                    },
                    "location": {
                        "value": "[parameters('location')]"
                    },
                    "sku": {
                        "value": "[parameters('dbSKU')]"
                    },
                    "sqlServerLogin": {
                        "value": "[parameters('dbAdministratorLogin')]"
                    },
                    "sqlServerPassword": {
                        "value": "[parameters('dbAdministratorLoginPassword')]"
                    },
                    "sqlServerName":{
                        "value": "[variables('dbServerName')]"
                    },
                    "sqlDbName":{
                        "value": "[variables('dbName')]"
                    }
                }
            }
        },
        // {
        //     "apiVersion": "[variables('resourcesApiVersion')]",
        //     "name": "[variables('searchServiceEnvName')]",
        //     "type": "Microsoft.Resources/deployments",
        //     "properties": {
        //         "mode": "Incremental",
        //         "templateLink": {
        //             "relativePath": "nested/search.json"
        //         },
        //         "parameters": {
        //             "deploymentId": {
        //                 "value": "[variables('deploymentId')]"
        //             },
        //             "location": {
        //                 "value": "[parameters('location')]"
        //             },
        //             "sku": {
        //                 "value": "[parameters('searchSKU')]"
        //             }
        //         }
        //     }
        // },
        {
            "apiVersion": "[variables('resourcesApiVersion')]",
            "name": "[variables('appInsightDeploymentName')]",
            "type": "Microsoft.Resources/deployments",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "relativePath": "nested/applicationInsights.json"
                },
                "parameters": {
                    "deploymentId": {
                        "value": "[variables('deploymentId')]"
                    },
                    "location": {
                        "value": "[parameters('location')]"
                    },
                    "appInsightName":{
                        "value": "[variables('appInsightName')]"
                    }
                }
            }
        },
        {
            "apiVersion": "[variables('resourcesApiVersion')]",
            "name": "[variables('boHostingPlanDeploymentName')]",
            "type": "Microsoft.Resources/deployments",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "relativePath": "nested/hostingPlan.json"
                },
                "parameters": {
                    "appName": {
                        "value": "umbraco"
                    },
                    "deploymentId": {
                        "value": "[variables('deploymentId')]"
                    },
                    "location": {
                        "value": "[parameters('location')]"
                    },
                    "sku": {
                        "value": "[parameters('webAppBOSKU')]"
                    }
                }
            }
        },
        {            
            "condition": "[not(parameters('shareHostPlan'))]",
            "apiVersion": "[variables('resourcesApiVersion')]",
            "name": "[variables('webHostingPlanDeploymentName')]",
            "type": "Microsoft.Resources/deployments",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "relativePath": "nested/hostingPlan.json"
                },
                "parameters": {
                    "appName": {
                        "value": "web"
                    },
                    "deploymentId": {
                        "value": "[variables('deploymentId')]"
                    },
                    "location": {
                        "value": "[parameters('location')]"
                    },
                    "sku": {
                        "value": "[parameters('webAppSKU')]"
                    }
                }
            }
        },
        {
            "apiVersion": "[variables('resourcesApiVersion')]",
            "name": "[variables('boWebAppDeploymentName')]",
            "type": "Microsoft.Resources/deployments",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "relativePath": "nested/umbraco.json"
                },
                "parameters": {
                    "appName": {
                        "value": "[variables('postFixName')]"
                    },
                    "deploymentId": {
                        "value": "[variables('deploymentId')]"
                    },
                    "location": {
                        "value": "[parameters('location')]"
                    },
                    "connectionStringName": {
                        "value": "[parameters('connectionStringName')]"
                    },
                    "connectionString": {
                        "value": "[concat('Server=tcp:', variables('dbServerName'), '.database.windows.net,1433;Initial Catalog=', variables('dbName'), ';Persist Security Info=False;User ID=', parameters('dbAdministratorLogin'), ';Password=', parameters('dbAdministratorLoginPassword') ,';MultipleActiveResultSets=False;Encrypt=True;TrustServerCertificate=False;Connection Timeout=30;')]"
                    },
                    "hostingPlanName": {
                        "value": "[variables('hostingPlanBOName')]"
                    },
                    "appInsightConnectionString": {
                        "value": "[reference(variables('appInsightDeploymentName')).outputs.ConnectionString.value]"
                    },
                    "mediaBlobName": {
                        "value": "[reference(variables('storageDeploymentName')).outputs.mediaBlob.value]"
                    },
                    "storageAccountName": {
                        "value": "[variables('storageAccountName')]"
                    },
                    "storageAccountApiVersion": {
                        "value": "[reference(variables('storageDeploymentName')).outputs.apiVersion.value]"
                    },
                    "mediaContainerName": {
                        "value": "[variables('mediaContainerName')]"
                    },
                    "umbracoVersion": {
                        "value": "[parameters('umbracoVersion')]"
                    }
                }
            },
            "dependsOn": [
                "[variables('storageDeploymentName')]",
                "[variables('appInsightDeploymentName')]",
                "[variables('boHostingPlanDeploymentName')]",
                "[variables('dbServiceDeploymentName')]"
            ]
        }
    ]
}